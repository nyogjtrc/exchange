// Code generated by protoc-gen-go. DO NOT EDIT.
// source: exchange.proto

/*
Package exchange is a generated protocol buffer package.

It is generated from these files:
	exchange.proto

It has these top-level messages:
	RateRequest
	RateReply
*/
package exchange

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RateRequest struct {
	Base   string `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	Target string `protobuf:"bytes,2,opt,name=target" json:"target,omitempty"`
}

func (m *RateRequest) Reset()                    { *m = RateRequest{} }
func (m *RateRequest) String() string            { return proto.CompactTextString(m) }
func (*RateRequest) ProtoMessage()               {}
func (*RateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RateRequest) GetBase() string {
	if m != nil {
		return m.Base
	}
	return ""
}

func (m *RateRequest) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

type RateReply struct {
	Base   string  `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	Target string  `protobuf:"bytes,2,opt,name=target" json:"target,omitempty"`
	Rate   float64 `protobuf:"fixed64,3,opt,name=rate" json:"rate,omitempty"`
}

func (m *RateReply) Reset()                    { *m = RateReply{} }
func (m *RateReply) String() string            { return proto.CompactTextString(m) }
func (*RateReply) ProtoMessage()               {}
func (*RateReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RateReply) GetBase() string {
	if m != nil {
		return m.Base
	}
	return ""
}

func (m *RateReply) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *RateReply) GetRate() float64 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func init() {
	proto.RegisterType((*RateRequest)(nil), "exchange.RateRequest")
	proto.RegisterType((*RateReply)(nil), "exchange.RateReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ExchangeService service

type ExchangeServiceClient interface {
	GetRate(ctx context.Context, in *RateRequest, opts ...grpc.CallOption) (*RateReply, error)
}

type exchangeServiceClient struct {
	cc *grpc.ClientConn
}

func NewExchangeServiceClient(cc *grpc.ClientConn) ExchangeServiceClient {
	return &exchangeServiceClient{cc}
}

func (c *exchangeServiceClient) GetRate(ctx context.Context, in *RateRequest, opts ...grpc.CallOption) (*RateReply, error) {
	out := new(RateReply)
	err := grpc.Invoke(ctx, "/exchange.ExchangeService/GetRate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ExchangeService service

type ExchangeServiceServer interface {
	GetRate(context.Context, *RateRequest) (*RateReply, error)
}

func RegisterExchangeServiceServer(s *grpc.Server, srv ExchangeServiceServer) {
	s.RegisterService(&_ExchangeService_serviceDesc, srv)
}

func _ExchangeService_GetRate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExchangeServiceServer).GetRate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/exchange.ExchangeService/GetRate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExchangeServiceServer).GetRate(ctx, req.(*RateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ExchangeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "exchange.ExchangeService",
	HandlerType: (*ExchangeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRate",
			Handler:    _ExchangeService_GetRate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "exchange.proto",
}

func init() { proto.RegisterFile("exchange.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 163 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4b, 0xad, 0x48, 0xce,
	0x48, 0xcc, 0x4b, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0x95, 0x2c,
	0xb9, 0xb8, 0x83, 0x12, 0x4b, 0x52, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x84, 0xb8,
	0x58, 0x92, 0x12, 0x8b, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x21, 0x31,
	0x2e, 0xb6, 0x92, 0xc4, 0xa2, 0xf4, 0xd4, 0x12, 0x09, 0x26, 0xb0, 0x28, 0x94, 0xa7, 0xe4, 0xcd,
	0xc5, 0x09, 0xd1, 0x5a, 0x90, 0x53, 0x49, 0x8a, 0x46, 0x90, 0xda, 0xa2, 0xc4, 0x92, 0x54, 0x09,
	0x66, 0x05, 0x46, 0x0d, 0xc6, 0x20, 0x30, 0xdb, 0xc8, 0x8b, 0x8b, 0xdf, 0x15, 0xea, 0xa6, 0xe0,
	0xd4, 0xa2, 0xb2, 0xcc, 0xe4, 0x54, 0x21, 0x73, 0x2e, 0x76, 0xf7, 0xd4, 0x12, 0x90, 0x15, 0x42,
	0xa2, 0x7a, 0x70, 0x0f, 0x20, 0xb9, 0x56, 0x4a, 0x18, 0x5d, 0xb8, 0x20, 0xa7, 0x52, 0x89, 0x21,
	0x89, 0x0d, 0xec, 0x49, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x01, 0x4c, 0x4f, 0x4c, 0xf6,
	0x00, 0x00, 0x00,
}
